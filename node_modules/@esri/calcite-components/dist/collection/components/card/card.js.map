{"version":3,"file":"card.js","sourceRoot":"","sources":["../../../../src/components/card/card.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,OAAO,EACP,KAAK,EAEL,CAAC,EACD,IAAI,EACJ,KAAK,EAEL,KAAK,GACN,MAAM,eAAe,CAAC;AACvB,OAAO,EAEL,+BAA+B,EAC/B,kCAAkC,GACnC,MAAM,6BAA6B,CAAC;AACrC,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAC5D,OAAO,EAAE,gBAAgB,EAAE,mBAAmB,EAAsB,MAAM,oBAAoB,CAAC;AAC/F,OAAO,EACL,eAAe,EACf,kBAAkB,EAClB,aAAa,EAEb,cAAc,GACf,MAAM,iBAAiB,CAAC;AAGzB,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAEzC;;;GAGG;AAEH;;;;;;;GAOG;AAQH,MAAM,OAAO,IAAI;;QA6Gf,4EAA4E;QAC5E,EAAE;QACF,mBAAmB;QACnB,EAAE;QACF,4EAA4E;QAEpE,oBAAe,GAAG,GAAS,EAAE;YACnC,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC;QAEM,sBAAiB,GAAG,CAAC,KAAoB,EAAQ,EAAE;YACzD,QAAQ,KAAK,CAAC,GAAG,EAAE;gBACjB,KAAK,GAAG,CAAC;gBACT,KAAK,OAAO;oBACV,IAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,MAAM;aACT;QACH,CAAC,CAAC;uBAvHiC,KAAK;wBAGW,KAAK;0BAGlB,KAAK;iCAGuB,aAAa;;;;;;IAiB/E,gBAAgB;QACd,0BAA0B;IAC5B,CAAC;IAWD,6EAA6E;IAC7E,EAAE;IACF,aAAa;IACb,EAAE;IACF,6EAA6E;IAE7E,iBAAiB;QACf,+BAA+B,CAAC,IAAI,CAAC,CAAC;QACtC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACvB,eAAe,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAED,oBAAoB;QAClB,kCAAkC,CAAC,IAAI,CAAC,CAAC;QACzC,mBAAmB,CAAC,IAAI,CAAC,CAAC;QAC1B,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,MAAM,aAAa,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,MAAM,eAAe,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QACpE,MAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAChE,OAAO,CACL,WAAK,KAAK,EAAE,EAAE,wBAAwB,EAAE,IAAI,EAAE,MAAM,EAAE,eAAe,EAAE;YACpE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CACd,wBAAe,QAAQ,EAAC,KAAK,EAAC,+BAA+B;gBAC3D,sBAAgB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAI,CAC5C,CACP,CAAC,CAAC,CAAC,IAAI;YACP,cAAc,IAAI,IAAI,CAAC,eAAe,EAAE;YACzC,4BAAoB,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE;gBAC9E,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI;gBAC9C,IAAI,CAAC,YAAY,EAAE;gBACpB,WAAK,KAAK,EAAC,cAAc;oBACvB,eAAQ,CACJ;gBACL,IAAI,CAAC,YAAY,EAAE,CACZ;YACT,CAAC,cAAc,IAAI,IAAI,CAAC,eAAe,EAAE,CACtC,CACP,CAAC;IACJ,CAAC;IAYD,qBAAqB;QACnB,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAC7C,CAAC;IAwBO,UAAU;QAChB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;IAChC,CAAC;IAEO,eAAe;QACrB,OAAO,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAC5C,eAAS,KAAK,EAAE,GAAG,CAAC,gBAAgB;YAClC,YAAM,IAAI,EAAE,KAAK,CAAC,SAAS,GAAI,CACvB,CACX,CAAC,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;IAEO,cAAc;QACpB,OAAO,CACL,qBACE,KAAK,EAAE,GAAG,CAAC,eAAe,EAC1B,OAAO,EAAE,IAAI,CAAC,eAAe,EAC7B,SAAS,EAAE,IAAI,CAAC,iBAAiB;YAEjC,wBAAkB,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAI,CAC3D,CACjB,CAAC;IACJ,CAAC;IAEO,YAAY;QAClB,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;QACpB,MAAM,KAAK,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QAC1C,MAAM,QAAQ,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChD,MAAM,SAAS,GAAG,KAAK,IAAI,QAAQ,CAAC;QAEpC,OAAO,SAAS,CAAC,CAAC,CAAC,CACjB,cAAQ,KAAK,EAAE,GAAG,CAAC,MAAM;YACvB,YAAM,IAAI,EAAE,KAAK,CAAC,KAAK,GAAI;YAC3B,YAAM,IAAI,EAAE,KAAK,CAAC,QAAQ,GAAI,CACvB,CACV,CAAC,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;IAEO,YAAY;QAClB,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;QACpB,MAAM,WAAW,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;QACtD,MAAM,SAAS,GAAG,UAAU,CAAC,EAAE,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;QAElD,MAAM,SAAS,GAAG,WAAW,IAAI,SAAS,CAAC;QAC3C,OAAO,SAAS,CAAC,CAAC,CAAC,CACjB,cAAQ,KAAK,EAAE,GAAG,CAAC,MAAM;YACvB,YAAM,IAAI,EAAE,KAAK,CAAC,WAAW,GAAI;YACjC,YAAM,IAAI,EAAE,KAAK,CAAC,SAAS,GAAI,CACxB,CACV,CAAC,CAAC,CAAC,IAAI,CAAC;IACX,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { getSlotted, toAriaBoolean } from \"../../utils/dom\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { LogicalFlowPosition } from \"../interfaces\";\nimport { CardMessages } from \"./assets/card/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\n\n/**\n * Cards do not include a grid or bounding container\n * - cards will expand to fit the width of their container\n */\n\n/**\n * @slot - A slot for adding subheader/description content.\n * @slot thumbnail - A slot for adding a thumbnail to the component.\n * @slot title - A slot for adding a title.\n * @slot subtitle - A slot for adding a subtitle or short summary.\n * @slot footer-start - A slot for adding a leading footer.\n * @slot footer-end - A slot for adding a trailing footer.\n */\n\n@Component({\n  tag: \"calcite-card\",\n  styleUrl: \"card.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Card implements ConditionalSlotComponent, LocalizedComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**  When `true`, a busy indicator is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /** When `true`, the component is selected. */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /** When `true`, the component is selectable. */\n  @Prop({ reflect: true }) selectable = false;\n\n  /** Sets the placement of the thumbnail defined in the `thumbnail` slot. */\n  @Prop({ reflect: true }) thumbnailPosition: LogicalFlowPosition = \"block-start\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: CardMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<CardMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /** Fires when `selectable` is `true` and the component is selected. */\n  @Event({ cancelable: false }) calciteCardSelect: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  render(): VNode {\n    const thumbnailInline = this.thumbnailPosition.startsWith(\"inline\");\n    const thumbnailStart = this.thumbnailPosition.endsWith(\"start\");\n    return (\n      <div class={{ \"calcite-card-container\": true, inline: thumbnailInline }}>\n        {this.loading ? (\n          <div aria-live=\"polite\" class=\"calcite-card-loader-container\">\n            <calcite-loader label={this.messages.loading} />\n          </div>\n        ) : null}\n        {thumbnailStart && this.renderThumbnail()}\n        <section aria-busy={toAriaBoolean(this.loading)} class={{ [CSS.container]: true }}>\n          {this.selectable ? this.renderCheckbox() : null}\n          {this.renderHeader()}\n          <div class=\"card-content\">\n            <slot />\n          </div>\n          {this.renderFooter()}\n        </section>\n        {!thumbnailStart && this.renderThumbnail()}\n      </div>\n    );\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteCardElement;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: CardMessages;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private cardSelectClick = (): void => {\n    this.selectCard();\n  };\n\n  private cardSelectKeyDown = (event: KeyboardEvent): void => {\n    switch (event.key) {\n      case \" \":\n      case \"Enter\":\n        this.selectCard();\n        event.preventDefault();\n        break;\n    }\n  };\n\n  private selectCard() {\n    this.selected = !this.selected;\n    this.calciteCardSelect.emit();\n  }\n\n  private renderThumbnail(): VNode {\n    return getSlotted(this.el, SLOTS.thumbnail) ? (\n      <section class={CSS.thumbnailWrapper}>\n        <slot name={SLOTS.thumbnail} />\n      </section>\n    ) : null;\n  }\n\n  private renderCheckbox(): VNode {\n    return (\n      <calcite-label\n        class={CSS.checkboxWrapper}\n        onClick={this.cardSelectClick}\n        onKeyDown={this.cardSelectKeyDown}\n      >\n        <calcite-checkbox checked={this.selected} label={this.messages.select} />\n      </calcite-label>\n    );\n  }\n\n  private renderHeader(): VNode {\n    const { el } = this;\n    const title = getSlotted(el, SLOTS.title);\n    const subtitle = getSlotted(el, SLOTS.subtitle);\n    const hasHeader = title || subtitle;\n\n    return hasHeader ? (\n      <header class={CSS.header}>\n        <slot name={SLOTS.title} />\n        <slot name={SLOTS.subtitle} />\n      </header>\n    ) : null;\n  }\n\n  private renderFooter(): VNode {\n    const { el } = this;\n    const startFooter = getSlotted(el, SLOTS.footerStart);\n    const endFooter = getSlotted(el, SLOTS.footerEnd);\n\n    const hasFooter = startFooter || endFooter;\n    return hasFooter ? (\n      <footer class={CSS.footer}>\n        <slot name={SLOTS.footerStart} />\n        <slot name={SLOTS.footerEnd} />\n      </footer>\n    ) : null;\n  }\n}\n"]}